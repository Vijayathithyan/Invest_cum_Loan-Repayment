# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HprnzHa4UwoQ1gLsCBVtFenzrwh7IQzu
"""

app_code = """
import streamlit as st
import pandas as pd
from simulation import UserInput, run_simulation, plot_simulation_results, generate_summary

st.set_page_config(page_title="Investment & Loan Strategy Simulator", layout="centered")

st.title("ðŸ“Š Investment-Cum-Loan Repayment Simulator")

with st.form("input_form"):
    st.subheader("User Profile & Inputs")
    gross_salary = st.number_input("Gross Annual Salary (USD)", value=90000)
    us_tax = st.slider("US Tax Rate (%)", 10, 40, 25)
    expenses = st.number_input("Monthly Living Expenses (USD)", value=2000.0)

    st.subheader("Loan Details")
    loan_amt = st.number_input("Education Loan Amount (INR)", value=2500000)
    interest_rate = st.slider("Loan Interest Rate (%)", 5, 20, 11)
    emi = st.number_input("Monthly EMI (INR)", value=27000)
    moratorium = st.slider("Moratorium Period (Months)", 0, 24, 6)
    loan_term = st.selectbox("Loan Duration (Months)", [60, 84, 120, 180, 240])

    st.subheader("Investment Details")
    invest_rate = st.slider("Investment Return Rate (%)", 0, 20, 12)
    tax_rate = st.slider("Indian Tax Rate (%)", 0, 30, 15)
    fx_rate = st.number_input("USD to INR Conversion Rate", value=83.5)

    st.subheader("Strategy")
    strategy = st.selectbox("Select Strategy", ['A', 'B', 'C', 'D'])
    invest_percent = st.slider("Percent of Savings to Invest (%)", 0, 100, 60)

    st.subheader("Simulation Settings")
    sim_years = st.slider("Number of Years to Simulate", 1, 30, 10)

    submitted = st.form_submit_button("Run Simulation")

if submitted:
    user_input = UserInput(
        gross_annual_salary_usd=gross_salary,
        us_tax_rate=us_tax/100,
        monthly_expenses_usd=expenses,
        loan_amount_inr=loan_amt,
        interest_rate_loan=interest_rate,
        emi_inr=emi,
        moratorium_months=moratorium,
        loan_term_months=loan_term,
        investment_rate_annual=invest_rate,
        indian_tax_rate=tax_rate,
        usd_to_inr_rate=fx_rate,
        percent_to_invest=invest_percent,
        years_to_simulate=sim_years,
        strategy_type=strategy
    )

    df = run_simulation(user_input)

    st.subheader("ðŸ“ˆ Results Summary")
    generate_summary(df, user_input)

    st.subheader("ðŸ“‰ Chart")
    plot_simulation_results(df, user_input.emi_inr)

    st.subheader("ðŸ“¤ Download Results")
    csv = df.to_csv(index=False).encode('utf-8')
    st.download_button("Download CSV", csv, "simulation_output.csv")

    df.to_excel("simulation_output.xlsx", index=False)
    with open("simulation_output.xlsx", "rb") as f:
        st.download_button("Download Excel", f, "simulation_output.xlsx")
"""

with open("app.py", "w") as file:
    file.write(app_code)

!ls